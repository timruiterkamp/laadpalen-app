"use strict";
var buildSchema = require("graphql").buildSchema;
module.exports = buildSchema("\ntype Category {\n  _id: ID!\n  title: String!\n  stakeholders: Stakeholder!\n  issues: [Issue!]\n}\n\ntype Message {\n  _id: ID!\n  message: String!\n  user: User!\n  issues: Issue!\n  categories: Category!\n  createdAt: String!\n}\n\ntype History {\n  _id: ID!\n  issue: Issue!\n  user: User!\n  stakeholders: Stakeholder!\n  date: String!\n  messages: [Message!]\n}\n\ntype Stakeholder {\n  _id: ID!\n  title: String!\n  users: [User!]\n  issues: [Issue!]\n}\n\ntype Issue {\n  _id: ID!\n  title: String!\n  description: String!\n  creator: User\n  category: Category!\n  location: String,\n  status: String\n  polenumber: Int!\n  createdAt: String!\n  messages: [Message!],\n  history: [History!],\n  image: String\n  stakeholders: Stakeholder!\n  loadingstation: Loadingstation!\n  confirmed: Int\n}\n\ntype User {\n  _id: ID!\n  email: String!\n  password: String\n  createdIssues: [Issue!]\n  createdMessages: [Message!]\n  lastLoggedIn: String\n}\n\ntype Loadingstation {\n  _id: ID!\n  longitude: Float\n  latitude: Float\n  city: String!\n  region: String\n  regioncode: String\n  district: String\n  subdistrict: String\n  address: String\n  postalcode: String\n  provider: String\n  sockets: Int\n  usedsockets: Int\n  status: String\n  issues: [Issue!]\n}\n\ntype AuthData {\n  userId: ID!\n  token: String!\n  tokenExpiration: Int!\n}\n\ninput IssueInput {\n  title: String!\n  description: String!\n  location: String\n  status: String\n  polenumber: Int\n  createdAt: String!\n  image: String\n  confirmed: Int\n  stakeholderId: String!\n  loadingstationId: String!\n}\n\ninput UserInput {\n  email: String!\n  password: String!\n}\n\ninput StakeholderInput {\n  title: String!\n}\n\ninput CategoryInput {\n  title: String!\n}\n\ninput MessageInput {\n  message: String!\n  createdAt: String!\n  issueId: String!\n  categoryId: String\n}\n\ntype RootQuery {\n  issues: [Issue!]!\n  categories: [Category!]!\n  users: [User!]!\n  stakeholders: [Stakeholder!]!\n  messages: [Message!]!\n  loadingstations: [Loadingstation!]!\n  login(email: String!, password: String!): AuthData!\n}\n\ntype RootMutation {\n  createIssue(issueInput: IssueInput): Issue\n  createCategory(categoryInput: CategoryInput): Category\n  createUser(userInput: UserInput): User\n  createMessage(messageInput: MessageInput): Message\n  createStakeholder(stakeholderInput: StakeholderInput): Stakeholder\n  updateIssue(issueId: ID!): Issue\n  updateLoadingstation(loadingstationId: ID!): Loadingstation\n}\nschema {\n  query: RootQuery\n  mutation: RootMutation\n}\n");
